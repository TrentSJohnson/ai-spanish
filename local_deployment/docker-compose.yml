
services:
  frontend:
    container_name: aispanish-frontend
    build:
      context: ../frontend
      dockerfile: ../local_deployment/Dockerfile.frontend
    ports:
      - "5173:5173"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    env_file: local.env
    depends_on:
      - backend

  backend:
    container_name: aispanish-backend
    build:
      context: ../backend
      dockerfile: ../local_deployment/Dockerfile.backend
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
    env_file:
      - local.env
      - backend.env
    depends_on:
      - mongodb
      - keycloak

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  postgres:
    image: postgres:15
    container_name: keycloak-postgres
    env_file: local.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    build:
      context: ./keycloak
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    env_file: local.env
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    command: start --import-realm

volumes:
  mongodb_data:
  postgres_data:
